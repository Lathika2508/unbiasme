<!DOCTYPE html>
<html>
  <head>
    <title>Daily MCQ Quiz</title>
    <link rel="stylesheet" href="/css/dailyMCQ.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      .hidden {
        display: none !important;
      }

      .quiz-container {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        min-height: 100vh;
      }

      .quiz-box {
        width: 100%;
        max-width: 500px;
        padding: 40px 30px;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .radio-button {
        display: block;
        position: relative;
        margin: 12px 0;
        padding-left: 35px;
        cursor: pointer;
        font-size: 16px;
        user-select: none;
        color: #333;
        width: 100%;
        max-width: 300px;
        text-align: left;
      }

      .radio-button input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
      }

      .radio-button__custom {
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        height: 20px;
        width: 20px;
        background-color: #fff;
        border: 2px solid #555;
        border-radius: 50%;
        transition: 0.3s ease;
      }

      .radio-button input:checked ~ .radio-button__custom {
        border: 6px solid #4c8bf5;
      }

      button {
        margin-top: 20px;
        padding: 10px 20px;
        font-weight: bold;
      }
      #already-submitted {
        border-radius: 8px;
      }
    </style>
  </head>
  <body>
    <!-- Loading Screen -->
    <div
      id="loading-screen"
      class="d-flex flex-column align-items-center justify-content-center"
      style="height: 100vh"
    >
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-3">Generating your personalized questions...</p>
    </div>
    <!-- Already Submitted Message -->
    <div
      id="already-submitted"
      class="d-flex flex-column align-items-center justify-content-center"
      style="display: none; height: 100vh"
    >
      <h3 class="text-center mb-3">You already completed today's quiz!</h3>
      <p id="already-summary-text" class="text-center mb-4"></p>
      <a href="/dashboard" class="btn btn-primary">Go to Dashboard</a>
    </div>
    <!-- Generating Summary Screen -->
    <div
      id="generating-summary"
      class="d-flex flex-column align-items-center justify-content-center hidden"
      style="height: 100vh"
    >
      <div class="spinner-border text-success" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-3">Analyzing your answers and generating a summary...</p>
    </div>

    <!-- Quiz Screen -->
    <div id="quiz-container" class="quiz-container hidden">
      <div class="quiz-box text-center">
        <h2 id="question-title" class="mb-4">Question here</h2>
        <form id="quiz-form">
          <% ['A', 'B', 'C', 'D', 'E'].forEach(opt => { %>
          <label class="radio-button">
            <input type="radio" name="option" value="<%= opt %>" />
            <span id="label<%= opt %>">Option <%= opt %></span>
            <span class="radio-button__custom"></span>
          </label>
          <% }) %>
          <button type="button" onclick="submitAnswer()">Next</button>
        </form>
      </div>
    </div>

    <!-- Result Screen -->
    <div id="result-screen" class="hidden" style="padding: 2rem">
      <h2 class="text-center mb-4">Thanks, <%= username %>!</h2>
      <p class="text-center mb-4" id="summary-text"></p>
      <div class="text-center">
        <a href="/dashboard" class="btn btn-primary">Go to Dashboard</a>
      </div>
    </div>

    <script>
      const quizContainer = document.getElementById("quiz-container");
      const loadingScreen = document.getElementById("loading-screen");
      const resultScreen = document.getElementById("result-screen");
      const summaryText = document.getElementById("summary-text");

      let questions = [];
      let current = 0;
      const scores = { A: 1, B: 2, C: 3, D: 4, E: 5 };
      const responses = [];

      function ajax(method, url, data, callback) {
        const xhr = new XMLHttpRequest();
        xhr.open(method, url, true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onreadystatechange = () => {
          if (xhr.readyState === 4) {
            callback(JSON.parse(xhr.responseText));
          }
        };
        xhr.send(data ? JSON.stringify(data) : null);
      }

      async function fetchQuestions() {
        const loading = document.getElementById("loading-screen");
        const quizContainer = document.getElementById("quiz-container");
        const alreadyMsg = document.getElementById("already-submitted");
        const resultScreen = document.getElementById("result-screen");

        // Reset visibility
        loading.classList.remove("hidden");
        quizContainer.classList.add("hidden");
        alreadyMsg.classList.add("hidden");
        resultScreen.classList.add("hidden");

        try {
          const res = await fetch("/dailyMCQ/questions");
          const data = await res.json();

          loading.classList.add("hidden");

          if (data.alreadySubmitted) {
            alreadyMsg.classList.remove("hidden");
            document.getElementById("already-summary-text").textContent =
              data.summary;
            return;
          }

          questions = data;
          quizContainer.classList.remove("hidden");
          loadQuestion();
        } catch (err) {
          console.error("  Failed to fetch questions:", err);
          loading.classList.add("hidden");
        }
      }

      function loadQuestion() {
        const q = questions[current];
        document.getElementById("question-title").textContent = `Q${
          current + 1
        }: ${q.text}`;
        ["A", "B", "C", "D", "E"].forEach((opt) => {
          document.getElementById("label" + opt).textContent = q.options[opt];
        });
        document
          .querySelectorAll('input[name="option"]')
          .forEach((el) => (el.checked = false));
      }

      function submitAnswer() {
        const selected = document.querySelector('input[name="option"]:checked');
        if (!selected) return alert("Select one option.");

        const answer = selected.value;
        const score = scores[answer];
        const q = questions[current];

        responses.push({
          text: q.text,
          options: q.options,
          userAnswer: answer,
          userScore: score,
        });

        current++;
        if (current < questions.length) {
          loadQuestion();
        } else {
          submitToServer();
        }
      }

      function submitToServer() {
        quizContainer.classList.add("hidden");
        document
          .getElementById("generating-summary")
          .classList.remove("hidden");

        ajax("POST", "/dailyMCQ/submit", { questions: responses }, (data) => {
          document.getElementById("generating-summary").classList.add("hidden");

          if (data.alreadySubmitted) {
            alert(data.message);
            return (window.location.href = "/dashboard");
          }

          summaryText.textContent = data.summary || "No summary.";
          resultScreen.classList.remove("hidden");
        });
      }
      fetchQuestions();
    </script>
  </body>
</html>
